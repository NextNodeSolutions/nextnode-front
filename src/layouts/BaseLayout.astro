---
import '../styles/fonts.css'
import '../styles/global.css'
import '../styles/base.css'
import { ContextProvider } from '../lib/i18n/ContextProvider'
import SEO from '@/components/common/SEO.astro'

// Import animation CSS as URLs for async loading
import keyframesUrl from '../styles/keyframes.css?url'
import animationsUrl from '../styles/animations.css?url'
import liquidEffectsUrl from '../styles/liquid-effects.css?url'

export interface Props {
	title: string
	description?: string
	image?: string
	type?: 'website' | 'article' | 'service'
	noindex?: boolean
}

// Use new i18n and theme system from middleware
const { locale, t, theme } = Astro.locals

const {
	title,
	description = t('common.meta.defaultDescription'),
	image = '/og-image.png',
	type = 'website',
	noindex = false,
} = Astro.props
---

<!doctype html>
<html lang={locale} class:list={['scroll-smooth', { dark: theme === 'dark' }]}>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />

		<!-- SEO centralisÃ© avec Schema.org -->
		<SEO
			title={title}
			description={description}
			image={image}
			type={type}
			noindex={noindex}
		/>

		<!-- Preconnect to external domains for faster third-party resource loading -->
		<link
			rel="preconnect"
			href="https://www.googletagmanager.com"
			crossorigin
		/>

		<!-- Preload critical fonts (self-hosted) -->
		<link
			rel="preload"
			href="/fonts/inter-400-latin.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/>
		<link
			rel="preload"
			href="/fonts/inter-600-latin.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/>

		<!-- Async load non-critical CSS (animations) -->
		<link
			rel="stylesheet"
			href={keyframesUrl}
			media="print"
			data-async-css
		/>
		<link
			rel="stylesheet"
			href={animationsUrl}
			media="print"
			data-async-css
		/>
		<link
			rel="stylesheet"
			href={liquidEffectsUrl}
			media="print"
			data-async-css
		/>
		<noscript>
			<link rel="stylesheet" href={keyframesUrl} />
			<link rel="stylesheet" href={animationsUrl} />
			<link rel="stylesheet" href={liquidEffectsUrl} />
		</noscript>

		<!-- Async CSS loader script -->
		<script is:inline>
			;(function () {
				const links = document.querySelectorAll('link[data-async-css]')
				links.forEach(function (link) {
					link.addEventListener('load', function () {
						this.media = 'all'
					})
					// Trigger load if already loaded
					if (link.sheet) {
						link.media = 'all'
					}
				})
			})()
		</script>

		<!-- Initialize global variables from server-provided data -->
		<script is:inline define:vars={{ locale, theme }}>
			// Set locale globals
			window.currentLanguage = locale
			window.currentLocale = locale
			document.documentElement.setAttribute('lang', locale)

			// Set theme globals
			window.initialTheme = theme
			window.currentTheme = theme
		</script>
	</head>
	<body
		class="bg-grid relative -z-50 bg-white font-sans text-gray-900 antialiased dark:bg-gray-900 dark:text-gray-100"
	>
		<!-- Provide React i18n context to all components -->
		<ContextProvider client:idle>
			<slot />
		</ContextProvider>

		<!-- Initialize client-side management modules -->
		<script>
			import { initTheme } from '@/lib/client/theme-manager'
			import { initLanguage } from '@/lib/client/language-manager'

			// Initialize when DOM is ready
			const initializeManagers = () => {
				initTheme()
				initLanguage()
			}

			if (document.readyState === 'loading') {
				document.addEventListener(
					'DOMContentLoaded',
					initializeManagers,
				)
			} else {
				initializeManagers()
			}
		</script>
	</body>
</html>
