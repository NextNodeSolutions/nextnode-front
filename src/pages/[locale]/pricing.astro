---
import BaseLayout from '@/layouts/BaseLayout.astro'
import Header from '@/components/layout/header/Header.astro'
import Footer from '@/components/layout/footer/Footer.astro'
import GradientCircle from '@/components/common/GradientCircle.astro'
import PricingHero from '@/components/features/pricing/PricingHero.astro'
import PricingCard from '@/components/features/pricing/PricingCard.astro'
import PricingIncludedCard from '@/components/features/pricing/PricingIncludedCard.astro'
import PricingSupportLevelCard from '@/components/features/pricing/PricingSupportLevelCard.astro'
import { cn } from '@/lib/core/utils'
import {
	SECTION_BASE_DELAYS,
	getAnimationDelayClass,
} from '@/lib/config/pricing/pricing-animation-config'
// Use new i18n system from middleware
const { t } = Astro.locals

// Get pricing data for structured data
const pageTitle = t('pricing.pageTitle')
const pageDescription = t('pricing.hero.subtitle')
---

<BaseLayout title={pageTitle} description={pageDescription}>
	<div class="relative flex min-h-screen flex-col">
		<Header />

		<main class="flex-1">
			<!-- Hero Section -->
			<PricingHero />

			<!-- Pricing Plans Section -->
			<section
				id="plans"
				class="bg-gray-50/50 py-8 sm:py-12 md:py-16 lg:py-20 dark:bg-gray-900/50"
				data-pricing-section
			>
				<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
					<!-- Section Header -->
					<div class="mb-12 text-center sm:mb-16 lg:mb-20">
						<h2
							class={cn(
								'text-2xl sm:text-3xl md:text-4xl font-bold tracking-tight text-gray-900 dark:text-white',
								'mb-3 sm:mb-4',
								'opacity-0',
								getAnimationDelayClass(
									SECTION_BASE_DELAYS.plansHeader,
								),
							)}
							data-animate="animate-fade-in-up"
						>
							{t('pricing.sections.plans.title')}
						</h2>
						<p
							class={cn(
								'mx-auto max-w-2xl text-base sm:text-lg text-gray-600 dark:text-gray-300',
								'opacity-0',
								getAnimationDelayClass(
									SECTION_BASE_DELAYS.plansSubtitle,
								),
							)}
							data-animate="animate-fade-in-up"
						>
							{t('pricing.sections.plans.subtitle')}
						</p>
					</div>

					<!-- Pricing Cards Grid -->
					<div
						class={cn(
							'grid gap-6 sm:gap-8 lg:gap-10',
							'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',
							'items-stretch',
						)}
					>
						<!-- Business Plan -->
						<PricingCard
							plan="business"
							animationDelay={300}
							className="order-2 lg:order-1"
						/>

						<!-- Starter Plan (Featured) -->
						<PricingCard
							plan="starter"
							featured={true}
							animationDelay={400}
							className="order-1 lg:order-2"
						/>

						<!-- Enterprise Plan -->
						<PricingCard
							plan="enterprise"
							animationDelay={500}
							className="order-3 lg:order-3"
						/>
					</div>

					<!-- What's Included Section -->
					<div class="mt-12 sm:mt-16 lg:mt-24" data-pricing-section>
						<div class="mb-8 text-center sm:mb-12 lg:mb-16">
							<h3
								class={cn(
									'text-2xl sm:text-3xl font-bold text-gray-900 dark:text-white mb-3 sm:mb-4',
									'opacity-0',
									getAnimationDelayClass(
										SECTION_BASE_DELAYS.includedHeader,
									),
								)}
								data-animate="animate-fade-in-up"
							>
								{t('pricing.pricing.title')}
							</h3>
							<p
								class={cn(
									'mx-auto max-w-2xl text-base sm:text-lg text-gray-600 dark:text-gray-300',
									'opacity-0',
									getAnimationDelayClass(
										SECTION_BASE_DELAYS.includedSubtitle,
									),
								)}
								data-animate="animate-fade-in-up"
							>
								{t('pricing.pricing.subtitle')}
							</p>
						</div>

						<div class="grid gap-6 sm:gap-8 lg:grid-cols-3">
							<!-- Development -->
							<PricingIncludedCard
								title={t('pricing.pricing.development.title')}
								description={t(
									'pricing.pricing.development.description',
								)}
								details={t(
									'pricing.pricing.development.details',
								)}
								colorVariant="blue"
								animationDelay={SECTION_BASE_DELAYS.includedCards}
							/>

							<!-- Infrastructure & Support -->
							<PricingIncludedCard
								title={t(
									'pricing.pricing.infrastructure.title',
								)}
								description={t(
									'pricing.pricing.infrastructure.description',
								)}
								details={t(
									'pricing.pricing.infrastructure.details',
								)}
								colorVariant="green"
								animationDelay={SECTION_BASE_DELAYS.includedCards +
									100}
							/>

							<!-- Guarantees -->
							<PricingIncludedCard
								title={t('pricing.pricing.guarantee.title')}
								description={t(
									'pricing.pricing.guarantee.description',
								)}
								details={t('pricing.pricing.guarantee.points')}
								colorVariant="dark"
								animationDelay={SECTION_BASE_DELAYS.includedCards +
									200}
							/>
						</div>
					</div>
				</div>
			</section>

			<!-- Support Levels Section -->
			<section class="py-2 lg:py-6" data-pricing-section>
				<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
					<!-- Section Header -->
					<div class="mb-16 text-center">
						<h2
							class={cn(
								'text-3xl font-bold tracking-tight text-gray-900 dark:text-white',
								'sm:text-4xl mb-4',
								'opacity-0',
								getAnimationDelayClass(
									SECTION_BASE_DELAYS.supportHeader,
								),
							)}
							data-animate="animate-fade-in-up"
						>
							{t('pricing.support.title')}
						</h2>
						<p
							class={cn(
								'mx-auto max-w-2xl text-lg text-gray-600 dark:text-gray-300',
								'opacity-0',
								getAnimationDelayClass(
									SECTION_BASE_DELAYS.supportSubtitle,
								),
							)}
							data-animate="animate-fade-in-up"
						>
							{t('pricing.support.subtitle')}
						</p>
					</div>

					<!-- Support Levels Grid -->
					<div
						class={cn(
							'grid gap-8 lg:gap-12',
							'grid-cols-1 md:grid-cols-3',
							'items-stretch mb-12',
						)}
					>
						{
							t('pricing.support.levels').map((level, index) => (
								<PricingSupportLevelCard
									level={level}
									index={index}
									isIncluded={index === 0}
								/>
							))
						}
					</div>

					<!-- Note -->
					<div
						class={cn(
							'text-center p-6 rounded-2xl',
							'bg-gradient-to-br from-brand-blue-light to-brand-green-light',
							'dark:from-gray-800 dark:to-gray-700',
							'border border-brand-blue/20 dark:border-gray-600',
							'opacity-0',
							getAnimationDelayClass(
								SECTION_BASE_DELAYS.supportNote,
							),
						)}
						data-animate="animate-fade-in-up"
					>
						<p
							class="text-sm leading-relaxed text-gray-600 dark:text-gray-300"
						>
							ðŸ’¡ {t('pricing.support.note')}
						</p>
					</div>
				</div>
			</section>
		</main>

		<GradientCircle />
		<Footer />
	</div>
</BaseLayout>

<script>
	import { setupMultiSectionAnimation } from '@/lib/observers/scroll-animation-observer'
	import { PRICING_OBSERVER_CONFIG } from '@/lib/observers/observer-configs'

	// Initialize scroll-triggered animations
	setupMultiSectionAnimation(PRICING_OBSERVER_CONFIG)
</script>
