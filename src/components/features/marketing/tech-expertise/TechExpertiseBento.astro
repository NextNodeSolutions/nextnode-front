---
import { cn } from '@/lib/core/utils'

interface Props {
	readonly title: string
	readonly subtitle: string
}

const { title, subtitle } = Astro.props
---

<section
	id="tech-expertise-section"
	class={cn(
		'relative py-12 sm:py-18 lg:py-24',
		'from-brand-black via-brand-charcoal to-brand-black bg-gradient-to-br',
	)}
>
	<!-- Background pattern -->
	<div class="absolute inset-0 opacity-5">
		<div
			class="absolute inset-0 bg-[linear-gradient(to_right,#80808012_1px,transparent_1px),linear-gradient(to_bottom,#80808012_1px,transparent_1px)] bg-[size:24px_24px]"
		>
		</div>
	</div>

	<div class="relative mx-auto max-w-7xl px-6 sm:px-8 lg:px-12">
		<!-- Section Header -->
		<div class="mb-16 text-center">
			<h2
				data-animate
				data-delay="0"
				class={cn(
					'expertise-animate expertise-fade-in-up',
					'text-3xl font-bold tracking-tight sm:text-4xl lg:text-5xl',
					'mb-4 text-white',
				)}
			>
				{title}
			</h2>
			<p
				data-animate
				data-delay="200"
				class="expertise-animate expertise-fade-in-up mx-auto max-w-3xl text-lg text-gray-400"
			>
				{subtitle}
			</p>
		</div>

		<!-- Bento Grid - Content provided via children -->
		<div class="grid grid-cols-1 gap-6 lg:grid-cols-3 lg:gap-8">
			<slot />
		</div>
	</div>
</section>

<style>
	/* ========================================================================
	   ANIMATION STATES
	   ======================================================================== */

	/* Initial state - hidden before animation trigger */
	.expertise-animate:not(.expertise-animated) {
		opacity: 0;
	}

	/* Triggered animation state - reuses fade-in-up from keyframes.css */
	.expertise-animate.expertise-animating.expertise-fade-in-up {
		--fade-distance: 20px;
		animation: fade-in-up 700ms ease-out forwards;
	}

	/* Final state after animation - visible and stable */
	.expertise-animate.expertise-animated {
		opacity: 1;
		transform: none;
	}
</style>

<script>
	import { setupScrollAnimation } from '@/lib/observers/scroll-animation-observer'

	// Initialize animation observer
	setupScrollAnimation({
		sectionSelector: '#tech-expertise-section',
		animateClass: 'expertise-animate',
		animatingClass: 'expertise-animating',
		animatedClass: 'expertise-animated',
		duration: 700,
		threshold: 0.2,
		rootMargin: '-5% 0px',
	})
</script>
