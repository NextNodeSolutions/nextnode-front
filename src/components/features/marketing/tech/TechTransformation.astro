---
import { cn } from '@/lib/core/utils'
import { Brain, Infinity, Rocket, Search, Shield, Zap } from 'lucide-react'

import {
	ANIMATION_DELAYS,
	DECORATIVE_CONFIG,
	getRegularCardDelay,
} from '@/lib/config/marketing/tech-animation-config'
import {
	BENEFIT_CARDS,
	MARKETING_CARDS,
	MARKETING_GRADIENTS,
	MARKETING_LAYOUT,
	MARKETING_SPACING,
	MARKETING_TYPOGRAPHY,
	DECORATIVE_ELEMENTS,
} from '@/lib/ui/marketing-constants'

import OrbitingTech from './OrbitingTech'
import { TransformationBeams } from './TransformationBeams'

const { t } = Astro.locals

// ============================================================================
// BENEFITS DATA
// ============================================================================

const benefits = [
	{
		id: 'mentalHealth',
		icon: Brain,
		title: t('home.techTransform.benefits.mentalHealth.title'),
		description: t('home.techTransform.benefits.mentalHealth.description'),
		metric: t('home.techTransform.benefits.mentalHealth.metric'),
		hero: true,
	},
	{
		id: 'seoGrowth',
		icon: Search,
		title: t('home.techTransform.benefits.seoGrowth.title'),
		description: t('home.techTransform.benefits.seoGrowth.description'),
		metric: t('home.techTransform.benefits.seoGrowth.metric'),
	},
	{
		id: 'performance',
		icon: Zap,
		title: t('home.techTransform.benefits.performance.title'),
		description: t('home.techTransform.benefits.performance.description'),
		metric: t('home.techTransform.benefits.performance.metric'),
	},
	{
		id: 'security',
		icon: Shield,
		title: t('home.techTransform.benefits.security.title'),
		description: t('home.techTransform.benefits.security.description'),
		metric: t('home.techTransform.benefits.security.metric'),
	},
	{
		id: 'speed',
		icon: Rocket,
		title: t('home.techTransform.benefits.speed.title'),
		description: t('home.techTransform.benefits.speed.description'),
		metric: t('home.techTransform.benefits.speed.metric'),
	},
	{
		id: 'scalability',
		icon: Infinity,
		title: t('home.techTransform.benefits.scalability.title'),
		description: t('home.techTransform.benefits.scalability.description'),
		metric: t('home.techTransform.benefits.scalability.metric'),
	},
]

const heroBenefit = benefits.find(b => b.hero)
const regularBenefits = benefits.filter(b => !b.hero)
---

<section
	class={cn(
		'relative overflow-hidden',
		MARKETING_LAYOUT.section.padding,
		MARKETING_GRADIENTS.sectionBg,
	)}
>
	<!-- Grid Pattern Background -->
	<div class="absolute inset-0 opacity-[0.03] dark:opacity-[0.05]">
		<div
			class="absolute inset-0 bg-[linear-gradient(to_right,#80808012_1px,transparent_1px),linear-gradient(to_bottom,#80808012_1px,transparent_1px)] bg-[size:24px_24px]"
		>
		</div>
	</div>

	<!-- Decorative blobs -->
	<div class={DECORATIVE_CONFIG.blobs.green.classes}></div>
	<div class={DECORATIVE_CONFIG.blobs.blue.classes}></div>

	<div
		class={cn(
			'relative mx-auto',
			MARKETING_LAYOUT.section.maxWidth,
			MARKETING_LAYOUT.section.containerPadding,
		)}
		id="tech-transform-section"
	>
		<!-- Section Header -->
		<div
			class={cn(
				MARKETING_SPACING.sectionGap,
				MARKETING_SPACING.headerGap,
				'text-center',
			)}
		>
			<h2
				class={cn(
					'tech-animate tech-animate-fade-in-up',
					MARKETING_TYPOGRAPHY.sectionTitle,
				)}
				data-delay={ANIMATION_DELAYS.title}
			>
				{t('home.techTransform.title')}
			</h2>
			<p
				class={cn(
					'tech-animate tech-animate-fade-in-up',
					MARKETING_TYPOGRAPHY.sectionSubtitle,
				)}
				data-delay={ANIMATION_DELAYS.subtitle}
			>
				{t('home.techTransform.subtitle')}
			</p>
		</div>

		<!-- Transformation Container -->
		<div
			class={cn(
				MARKETING_LAYOUT.grid.techTransform.cols,
				MARKETING_LAYOUT.grid.techTransform.gap,
			)}
		>
			<!-- Technologies Cloud (Left) -->
			<div
				class={cn(
					MARKETING_LAYOUT.grid.techTransform.spans.tech,
					'tech-animate tech-animate-fade-in-left',
				)}
				data-delay={ANIMATION_DELAYS.techSection}
			>
				<div class={MARKETING_CARDS.container}>
					<h3
						class="mb-6 text-center text-xl font-bold text-gray-900 dark:text-white"
					>
						{t('home.techTransform.techSection.title')}
					</h3>
					<OrbitingTech client:only="react" />
				</div>
			</div>

			<!-- Transformation Beams (Center) -->
			<div
				class={cn(
					MARKETING_LAYOUT.grid.techTransform.spans.beams,
					'tech-animate tech-animate-fade-in',
					'flex items-center justify-center py-8 lg:py-0',
				)}
				data-delay={ANIMATION_DELAYS.beams}
			>
				<div class="relative h-[250px] w-full">
					<TransformationBeams client:load />
				</div>
			</div>

			<!-- Benefits Bento Grid (Right) -->
			<div
				class={cn(
					MARKETING_LAYOUT.grid.techTransform.spans.benefits,
					'tech-animate tech-animate-fade-in-right',
				)}
				data-delay={ANIMATION_DELAYS.benefits}
			>
				<div class={MARKETING_CARDS.benefits}>
					<h3
						class="mb-6 text-center text-xl font-bold text-gray-900 dark:text-white"
					>
						{t('home.techTransform.benefitsSection.title')}
					</h3>

					<!-- Bento Grid -->
					<div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
						<!-- Hero Benefit Card -->
						{
							heroBenefit && (
								<div
									class={cn(
										BENEFIT_CARDS.hero,
										'col-span-1 min-h-[200px] sm:col-span-2 sm:min-h-[200px]',
										'tech-animate tech-animate-benefit-card',
									)}
									data-delay={ANIMATION_DELAYS.heroCard}
								>
									<div
										class={
											DECORATIVE_ELEMENTS.gradientAnimated
										}
									/>

									<div
										class={cn(
											'relative z-10 flex h-full flex-col justify-between',
											MARKETING_SPACING.cardGap,
										)}
									>
										<div
											class={
												BENEFIT_CARDS.heroIconContainer
											}
										>
											<heroBenefit.icon className="h-8 w-8 text-white" />
										</div>

										<div
											class={cn(
												'flex-1',
												MARKETING_SPACING.cardTight,
											)}
										>
											<h4
												class={
													MARKETING_TYPOGRAPHY.heroBenefitTitle
												}
											>
												{heroBenefit.title}
											</h4>
											<p
												class={
													MARKETING_TYPOGRAPHY.heroBenefitDescription
												}
											>
												{heroBenefit.description}
											</p>
										</div>

										<div class="flex justify-end">
											<span
												class={
													MARKETING_TYPOGRAPHY.heroMetricBadge
												}
											>
												{heroBenefit.metric}
											</span>
										</div>
									</div>
								</div>
							)
						}

						<!-- Regular Benefit Cards -->
						{
							regularBenefits.map((benefit, index) => (
								<div
									class={cn(
										BENEFIT_CARDS.regular,
										'tech-animate tech-animate-benefit-card',
										index === 4 &&
											'col-span-1 sm:col-span-2',
									)}
									data-delay={getRegularCardDelay(index)}
								>
									<div
										class={cn(
											'relative z-10',
											MARKETING_SPACING.cardTight,
										)}
									>
										<div class="flex items-start justify-between gap-2">
											<div
												class={
													BENEFIT_CARDS.iconContainer
												}
											>
												<benefit.icon className="h-4 w-4 text-white" />
											</div>
											<span
												class={
													MARKETING_TYPOGRAPHY.metricBadge
												}
											>
												{benefit.metric}
											</span>
										</div>

										<h4
											class={
												MARKETING_TYPOGRAPHY.benefitTitle
											}
										>
											{benefit.title}
										</h4>
										<p
											class={
												MARKETING_TYPOGRAPHY.benefitDescription
											}
										>
											{benefit.description}
										</p>
									</div>

									<div
										class={DECORATIVE_ELEMENTS.hoverGlow}
									/>
								</div>
							))
						}
					</div>
				</div>
			</div>
		</div>

		<!-- Bottom CTA Message -->
		<div
			class={cn('tech-animate tech-animate-fade-in-up mt-16 text-center')}
			data-delay={ANIMATION_DELAYS.ctaMessage}
		>
			<p
				class="mx-auto max-w-3xl text-lg font-medium text-gray-700 dark:text-gray-300"
			>
				{t('home.techTransform.ctaMessage')}
			</p>
		</div>
	</div>
</section>

<style>
	/* ========================================================================
	   ANIMATION STATES
	   ======================================================================== */

	/* Initial state - hidden before animation trigger */
	.tech-animate:not(.tech-animated) {
		opacity: 0;
	}

	/* Triggered animation state */
	.tech-animate.tech-animating.tech-animate-fade-in-up {
		animation: fade-in-up 0.8s ease-out forwards;
	}

	.tech-animate.tech-animating.tech-animate-fade-in {
		animation: fade-in-0 0.8s ease-out forwards;
	}

	.tech-animate.tech-animating.tech-animate-fade-in-left {
		animation: fade-in-left 0.8s ease-out forwards;
	}

	.tech-animate.tech-animating.tech-animate-fade-in-right {
		animation: fade-in-right 0.8s ease-out forwards;
	}

	/* Pure fade-in for benefit cards (uses global fade-in-0) */
	.tech-animate.tech-animating.tech-animate-benefit-card {
		animation: fade-in-0 1s ease-in forwards;
	}

	/* Final state after animation - visible and stable */
	.tech-animate.tech-animated {
		opacity: 1;
		transform: none;
	}

	/* ========================================================================
	   KEYFRAME ANIMATIONS (using global animations.css)
	   ======================================================================== */

	/* fadeInUp, fadeIn, pulse-ring, gradient-shift, icon-pulse
	   are now defined in src/styles/animations.css */

	/* ========================================================================
	   BACKGROUND EFFECTS
	   ======================================================================== */

	.gradient-animated {
		background: linear-gradient(
			45deg,
			var(--brand-blue) 0%,
			var(--brand-green) 50%,
			var(--brand-blue) 100%
		);
		background-size: 200% 200%;
		animation: gradient-shift 8s ease infinite;
	}

	.icon-pulse {
		animation: icon-pulse 2s ease-in-out infinite;
	}
</style>

<script>
	import { setupTechTransformAnimation } from './TechTransformationObserver'

	// Initialize animation observer
	setupTechTransformAnimation()
</script>
