---
import { cn } from '@/lib/core/utils'
import CalEmbed from '@/components/ui/CalEmbed'

const { t, locale } = Astro.locals
---

<section
	class={cn(
		'relative overflow-hidden py-12 sm:py-18 lg:py-24',
		'bg-gradient-to-br from-brand-blue/90 via-brand-green/90 to-brand-blue/90',
	)}
>
	<!-- Grid Pattern Background -->
	<div class="absolute inset-0 opacity-[0.08]">
		<div
			class="absolute inset-0 bg-[linear-gradient(to_right,#ffffff12_1px,transparent_1px),linear-gradient(to_bottom,#ffffff12_1px,transparent_1px)] bg-[size:24px_24px]"
		>
		</div>
	</div>

	<!-- Animated Background Patterns -->
	<div
		class="absolute top-0 left-0 h-96 w-96 animate-pulse rounded-full bg-white/30 opacity-50 blur-3xl"
	>
	</div>
	<div
		class="animation-delay-1000 absolute right-0 bottom-0 h-96 w-96 animate-pulse rounded-full bg-white/30 opacity-50 blur-3xl"
	>
	</div>

	<div class="relative mx-auto max-w-4xl px-6 sm:px-8 lg:px-12">
		<!-- Content -->
		<div class="space-y-8 text-center">
			<!-- Title -->
			<h2
				class={cn(
					'animate-fade-in-up text-3xl font-bold tracking-tight opacity-0 sm:text-4xl lg:text-5xl',
					'text-white',
				)}
			>
				{t('home.cta.title')}
			</h2>

			<!-- Description -->
			<p
				class="animation-delay-300 animate-fade-in-up mx-auto max-w-2xl text-lg leading-relaxed text-white/90 opacity-0 sm:text-xl"
			>
				{t('home.cta.description')}
			</p>

			<!-- Features List -->
			<div
				class="flex flex-col items-center justify-center gap-4 sm:flex-row sm:gap-8"
			>
				{
					t('home.cta.features').map((feature: string) => (
						<div class="flex items-center gap-2 font-medium text-white/90">
							<span class="text-lg">{feature}</span>
						</div>
					))
				}
			</div>

			<!-- CTA Button -->
			<div class="pt-4">
				<CalEmbed
					calLink="walid-mos"
					mode="popup"
					buttonText={t('home.cta.primaryButton')}
					locale={locale}
					client:load
				/>
			</div>
		</div>
	</div>
</section>

<style>
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(30px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.animate-fade-in-up {
		animation: fadeInUp 0.8s ease-out forwards;
	}

	.animation-delay-300 {
		animation-delay: 300ms;
	}

	.animation-delay-1000 {
		animation-delay: 1s;
	}
</style>
