---
import { cva } from 'class-variance-authority'
import { cn } from '@/lib/core/utils'
import { translatePlan } from '@/lib/i18n/translate-utils'
import PricingCardBadge from './PricingCardBadge.astro'
import PricingCardHeader from './PricingCardHeader.astro'
import PricingCardFeatures from './PricingCardFeatures.astro'
import PricingCardExamples from './PricingCardExamples.astro'
import CalActionButton from '@/components/ui/CalActionButton'
import type { Plan } from '@/types/plans'

const { t, locale } = Astro.locals

export interface Props {
	plan: Plan
	featured?: boolean
	animationDelay?: number
	className?: string
}

const {
	plan,
	featured = false,
	animationDelay = 0,
	className = '',
} = Astro.props

const planData = translatePlan(plan)
const examplesTitle = t('pricing.sections.examplesTitle')

const gradientMap = {
	starter: 'blue',
	business: 'green',
	enterprise: 'dark',
} as const

// Card container variants
const cardVariants = cva(
	[
		'group relative flex flex-col h-full',
		'rounded-2xl border border-gray-200/50',
		'bg-white/80 backdrop-blur-sm',
		'dark:border-gray-700/50 dark:bg-gray-800/80',
		'transition-all duration-500',
		'hover:shadow-lg hover:-translate-y-1',
		'opacity-0',
		'p-4 sm:p-6 lg:p-8',
	],
	{
		variants: {
			plan: {
				starter: '',
				business: '',
				enterprise: '',
			},
			featured: {
				true: ['sm:scale-105', 'md:hover:scale-110', 'ring-2'],
				false: 'md:hover:scale-105',
			},
		},
		compoundVariants: [
			{
				plan: 'starter',
				featured: true,
				class: 'ring-brand-blue/20 shadow-brand-blue/25',
			},
			{
				plan: 'business',
				featured: true,
				class: 'ring-brand-green/20 shadow-brand-green/25',
			},
			{
				plan: 'enterprise',
				featured: true,
				class: 'ring-brand-blue-dark/20 shadow-brand-blue-dark/25',
			},
		],
	},
)

// Decorative background variants
const decorativeVariants = cva(
	[
		'absolute top-2 bottom-2 -left-1 -right-1 rounded-2xl -z-30',
		'opacity-0 transition-all duration-700 blur-[3px]',
		'bg-gradient-to-br pointer-events-none',
		'group-hover:opacity-5 group-hover:scale-105 group-hover:py-0',
	],
	{
		variants: {
			plan: {
				starter: 'from-brand-blue to-brand-blue-dark',
				business: 'from-brand-green to-brand-green-dark',
				enterprise: 'from-brand-blue-dark to-brand-green-dark',
			},
		},
	},
)
---

<div
	class={cn(cardVariants({ plan, featured }), className)}
	style={{
		animationDelay: animationDelay > 0 ? `${animationDelay}ms` : undefined,
	}}
	data-animate="animate-fade-in-up"
>
	{featured && <PricingCardBadge plan={plan} badge={planData.badge} />}

	<PricingCardHeader
		plan={plan}
		name={planData.name}
		tagline={planData.tagline}
		price={planData.price}
		recurring={planData.recurring}
		description={planData.description}
	/>

	<PricingCardFeatures plan={plan} features={planData.features} />

	<PricingCardExamples
		plan={plan}
		title={examplesTitle}
		examples={planData.examples}
	/>

	<!-- CTA Button -->
	<div class="mt-auto pt-6">
		<CalActionButton
			calLink="walid-mos"
			buttonText={planData.cta}
			locale={locale}
			variant="pricing"
			size="sm"
			gradient={gradientMap[plan]}
			client:visible
		/>
	</div>

	<!-- Decorative background -->
	<div class={cn(decorativeVariants({ plan }))}></div>
</div>
