---
import {
	STEP_COLORS,
	WORKFLOW_POSITIONS,
	generateGradientStops,
	type GradientStop,
	type Step,
} from '@/lib/workflow-constants'
import { generateSteps } from '@/lib/workflow-utils'

// Données des étapes avec traductions
const steps: Step[] = generateSteps()
const positions = WORKFLOW_POSITIONS
const gradientStops = generateGradientStops(STEP_COLORS)
---

<div class="workflow-journey w-full py-8 md:py-12 lg:py-16">
	<div class="container mx-auto px-4">
		<svg
			class="h-[500px] w-full md:h-[600px] lg:h-[700px]"
			viewBox="0 0 1000 500"
			style="overflow: visible;"
			xmlns="http://www.w3.org/2000/svg"
		>
			<defs>
				<linearGradient
					id="pathGradient"
					x1="0%"
					y1="0%"
					x2="100%"
					y2="100%"
				>
					{
						gradientStops.map((stop: GradientStop) => (
							<stop
								offset={stop.offset}
								style={`stop-color:${stop.color};stop-opacity:${stop.opacity}`}
							/>
						))
					}
				</linearGradient>

				{/* Gradient avec fade à la fin */}
				<linearGradient
					id="pathGradientWithFade"
					x1="0%"
					y1="0%"
					x2="100%"
					y2="0%"
				>
					{
						gradientStops
							.slice(0, -1)
							.map((stop: GradientStop) => (
								<stop
									offset={stop.offset}
									style={`stop-color:${stop.color};stop-opacity:${stop.opacity}`}
								/>
							))
					}
					<stop
						offset="85%"
						style={`stop-color:${gradientStops[gradientStops.length - 1]?.color};stop-opacity:0.8`}
					></stop>
					<stop
						offset="100%"
						style={`stop-color:${gradientStops[gradientStops.length - 1]?.color};stop-opacity:0`}
					></stop>
				</linearGradient>

				<filter
					id="dropShadow"
					x="-50%"
					y="-50%"
					width="200%"
					height="200%"
				>
					<feDropShadow
						dx="0"
						dy="4"
						stdDeviation="8"
						flood-opacity="0.1"></feDropShadow>
				</filter>
			</defs>

			{/* Chemin principal animé avec fade */}
			<path
				d="M 40 56 L 80 60 L 350 75 C 480 85 520 100 510 140 C 500 180 420 195 320 185 C 240 175 200 180 205 220 C 210 260 250 275 320 265 L 420 255 C 560 245 600 260 590 300 C 580 340 620 355 700 365 L 880 385 L 950 389"
				stroke="url(#pathGradientWithFade)"
				stroke-width="4"
				fill="none"
				stroke-dasharray="12,6"
				opacity="0.7"
			>
				<animate
					attributeName="stroke-dashoffset"
					values="18;0"
					dur="2s"
					repeatCount="indefinite"></animate>
			</path>

			{/* Chemin de fond */}
			<path
				d="M 40 56 L 80 60 L 350 75 C 480 85 520 100 510 140 C 500 180 420 195 320 185 C 240 175 200 180 205 220 C 210 260 250 275 320 265 L 420 255 C 560 245 600 260 590 300 C 580 340 620 355 700 365 L 880 385 L 950 389"
				stroke="#f1f5f9"
				stroke-width="8"
				fill="none"
				opacity="0.3"></path>
			{
				steps.map((step: Step, index: number) => {
					const pos = positions[index]
					const color = STEP_COLORS[index]

					if (!pos || !color) {
						return null
					}

					return (
						<g class="step-card-group">
							{/* Ligne de connexion */}
							<line
								x1={pos.x}
								y1={pos.y}
								x2={pos.lineEndX}
								y2={pos.lineEndY}
								stroke={color}
								stroke-width="3"
								opacity="1"
							/>

							{/* Card */}
							<g
								transform={`translate(${pos.cardX}, ${pos.cardY})`}
							>
								{/* Ombre */}
								<rect
									x="2"
									y="2"
									width="60"
									height="60"
									rx="12"
									fill="rgba(0,0,0,0.1)"
									opacity="0.3"
								/>

								{/* Gradient de fond */}
								<defs>
									<linearGradient
										id={`cardGradient${index}`}
										x1="0%"
										y1="0%"
										x2="100%"
										y2="100%"
									>
										<stop
											offset="0%"
											style={`stop-color:${color};stop-opacity:1`}
										/>
										<stop
											offset="100%"
											style={`stop-color:${color};stop-opacity:0.8`}
										/>
									</linearGradient>
								</defs>

								{/* Fond de la card */}
								<rect
									x="0"
									y="0"
									width="60"
									height="60"
									rx="12"
									fill={`url(#cardGradient${index})`}
									filter="url(#dropShadow)"
								/>

								{/* Pattern décoratif */}
								<g opacity="0.2">
									{[
										[15, 15, 2],
										[45, 15, 1.5],
										[15, 45, 1.5],
										[45, 45, 2],
									].map(([cx, cy, r]) => (
										<circle
											cx={cx}
											cy={cy}
											r={r}
											fill="white"
										/>
									))}
								</g>

								{/* Icône centrale */}
								<text
									x="30"
									y="35"
									text-anchor="middle"
									font-size="16"
									font-weight="bold"
									dominant-baseline="middle"
									fill="white"
									style="filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3))"
								>
									{step.icon}
								</text>

								{/* Numéro créatif en haut à droite */}
								<text
									x="48"
									y="18"
									text-anchor="middle"
									font-family="'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif"
									font-size="32"
									font-weight="700"
									dominant-baseline="middle"
									fill="white"
									opacity="0.95"
									style="filter: drop-shadow(0 2px 6px rgba(0,0,0,0.4));"
								>
									{index + 1}
								</text>

								{/* Titre - position adaptée selon l'étape */}
								<text
									x="30"
									y={
										index === 0 ||
										index === 1 ||
										index === 5
											? '-10'
											: '75'
									}
									text-anchor="middle"
									class="fill-gray-800 text-xs font-semibold dark:fill-white"
									dominant-baseline="middle"
								>
									{step.title}
								</text>
							</g>

							{/* Point de connexion sur le chemin */}
							<circle
								cx={pos.x}
								cy={pos.y}
								r="6"
								fill={color}
								stroke="white"
								stroke-width="3"
							/>
						</g>
					)
				})
			}
		</svg>
	</div>
</div>

<style>
	/* Styles simples et propres pour le workflow journey */
	.workflow-journey {
		user-select: none;
	}

	.step-card-group {
		opacity: 1;
	}

	/* Responsive adjustments */
	@media (max-width: 768px) {
		.workflow-journey svg {
			height: 400px;
		}
	}
</style>
