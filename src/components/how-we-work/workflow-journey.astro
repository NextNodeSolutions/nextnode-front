---
import {
	STEP_COLORS,
	WORKFLOW_POSITIONS,
	generateGradientStops,
	type Step,
} from '@/lib/workflow-constants'
import { generateSteps, generateDetailedSteps } from '@/lib/workflow-utils'

import WorkflowJourneyInteractive from './WorkflowJourneyInteractive'
import WorkflowGradients from './WorkflowGradients.astro'
import WorkflowPath from './WorkflowPath.astro'
import WorkflowStepCard from './WorkflowStepCard.astro'

// Données des étapes avec traductions
const steps: Step[] = generateSteps()
const detailedSteps = generateDetailedSteps()
const positions = WORKFLOW_POSITIONS
const gradientStops = generateGradientStops(STEP_COLORS)
---

<div class="workflow-journey w-full py-4 md:py-6 lg:py-8">
	<div class="container mx-auto px-4">
		<svg
			class="aspect-[2/1] w-full"
			viewBox="0 -50 1000 500"
			style="overflow: visible;"
			xmlns="http://www.w3.org/2000/svg"
		>
			<WorkflowGradients gradientStops={gradientStops} />
			<WorkflowPath />
			{
				steps.map((step: Step, index: number) => {
					const position = positions[index]
					const color = STEP_COLORS[index]

					if (!position || !color) {
						return null
					}

					return (
						<WorkflowStepCard
							step={step}
							position={position}
							color={color}
							index={index}
						/>
					)
				})
			}
		</svg>

		<!-- Composant React pour gérer les modales -->
		<WorkflowJourneyInteractive
			steps={steps}
			detailedSteps={detailedSteps}
			colors={STEP_COLORS}
			client:load
		/>
	</div>
</div>

<style>
	/* Styles simples et propres pour le workflow journey */
	.workflow-journey {
		user-select: none;
	}

	.step-card-group {
		opacity: 1;
	}

	/* Interactive card hover effects */
	.interactive-card {
		cursor: pointer;
	}

	/* Responsive adjustments */
	@media (max-width: 768px) {
		.workflow-journey svg {
			height: 400px;
		}

		.expanded-content {
			width: 350px !important;
			height: 250px !important;
			x: 50 !important;
			y: 125 !important;
		}
	}
</style>
