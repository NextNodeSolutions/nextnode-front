---
import { t } from '@/lib/i18n-server'

export interface Props {
	stepKey: string
	index: number
}

const { stepKey, index } = Astro.props

// R√©cup√©rer les donn√©es de l'√©tape depuis les traductions
const step = t(`howWeWork.steps.${stepKey}`)
const number = step.number
const title = step.title
const description = step.description

// Design system sophistiqu√© avec couleurs et gradients
const stepDesigns = [
	{
		gradient: 'from-indigo-600 via-blue-600 to-cyan-500',
		accent: 'bg-indigo-500',
		glow: 'shadow-indigo-500/25',
		ring: 'ring-indigo-500/20',
		icon: 'üîç',
		pattern: 'dots',
	},
	{
		gradient: 'from-violet-600 via-purple-600 to-fuchsia-500',
		accent: 'bg-violet-500',
		glow: 'shadow-violet-500/25',
		ring: 'ring-violet-500/20',
		icon: 'üé®',
		pattern: 'grid',
	},
	{
		gradient: 'from-emerald-600 via-teal-600 to-cyan-500',
		accent: 'bg-emerald-500',
		glow: 'shadow-emerald-500/25',
		ring: 'ring-emerald-500/20',
		icon: '‚ö°',
		pattern: 'waves',
	},
	{
		gradient: 'from-amber-500 via-orange-500 to-red-500',
		accent: 'bg-amber-500',
		glow: 'shadow-amber-500/25',
		ring: 'ring-amber-500/20',
		icon: 'üß™',
		pattern: 'triangles',
	},
	{
		gradient: 'from-rose-500 via-pink-500 to-fuchsia-500',
		accent: 'bg-rose-500',
		glow: 'shadow-rose-500/25',
		ring: 'ring-rose-500/20',
		icon: 'üöÄ',
		pattern: 'circles',
	},
	{
		gradient: 'from-slate-600 via-gray-600 to-zinc-500',
		accent: 'bg-slate-500',
		glow: 'shadow-slate-500/25',
		ring: 'ring-slate-500/20',
		icon: 'üõ†Ô∏è',
		pattern: 'hexagons',
	},
]

const design = stepDesigns[index] || stepDesigns[0]
---

<div
	class="group relative transform transition-all duration-700 hover:scale-[1.02]"
>
	{/* Glow effect */}
	<div
		class="{design.gradient} absolute -inset-1 rounded-3xl bg-gradient-to-r opacity-0 blur transition-all duration-500 group-hover:opacity-20"
	>
	</div>

	{/* Main card */}
	<div
		class="{design.glow} relative overflow-hidden rounded-2xl border border-gray-100 bg-white shadow-xl transition-all duration-500 group-hover:shadow-2xl dark:border-gray-800 dark:bg-gray-900"
	>
		{/* Header section */}
		<div
			class="{design.gradient} relative h-32 overflow-hidden bg-gradient-to-br"
		>
			{/* Animated background pattern */}
			<div
				class="absolute inset-0 opacity-10 transition-opacity duration-500 group-hover:opacity-20"
			>
				{
					design.pattern === 'dots' && (
						<svg class="h-full w-full" viewBox="0 0 100 100">
							<defs>
								<pattern
									id={`dots-${stepKey}`}
									x="0"
									y="0"
									width="10"
									height="10"
									patternUnits="userSpaceOnUse"
								>
									<circle
										cx="5"
										cy="5"
										r="1"
										fill="currentColor"
									/>
								</pattern>
							</defs>
							<rect
								width="100%"
								height="100%"
								fill={`url(#dots-${stepKey})`}
							/>
						</svg>
					)
				}

				{
					design.pattern === 'grid' && (
						<svg class="h-full w-full" viewBox="0 0 100 100">
							<defs>
								<pattern
									id={`grid-${stepKey}`}
									x="0"
									y="0"
									width="10"
									height="10"
									patternUnits="userSpaceOnUse"
								>
									<path
										d="M 10 0 L 0 0 0 10"
										fill="none"
										stroke="currentColor"
										stroke-width="0.5"
									/>
								</pattern>
							</defs>
							<rect
								width="100%"
								height="100%"
								fill={`url(#grid-${stepKey})`}
							/>
						</svg>
					)
				}

				{
					design.pattern === 'waves' && (
						<svg class="h-full w-full" viewBox="0 0 100 100">
							<path
								d="M0,50 Q25,30 50,50 T100,50 L100,100 L0,100 Z"
								fill="currentColor"
								opacity="0.1"
							/>
							<path
								d="M0,60 Q25,40 50,60 T100,60 L100,100 L0,100 Z"
								fill="currentColor"
								opacity="0.05"
							/>
						</svg>
					)
				}
			</div>

			{/* Floating elements */}
			<div
				class="absolute top-4 right-4 transform transition-transform duration-500 group-hover:rotate-12"
			>
				<div
					class="flex h-12 w-12 items-center justify-center rounded-2xl bg-white/20 shadow-lg ring-1 ring-white/30 backdrop-blur-sm"
				>
					<span class="text-2xl font-black text-white drop-shadow-sm"
						>{number}</span
					>
				</div>
			</div>

			{/* Icon with animation */}
			<div
				class="absolute bottom-4 left-4 transform transition-all duration-500 group-hover:scale-110 group-hover:-rotate-6"
			>
				<div
					class="flex h-16 w-16 items-center justify-center rounded-2xl border border-white/20 bg-white/10 shadow-lg backdrop-blur-md"
				>
					<span class="text-3xl drop-shadow-lg filter"
						>{design.icon}</span
					>
				</div>
			</div>

			{/* Decorative orbs */}
			<div
				class="absolute top-2 left-2 h-4 w-4 animate-pulse rounded-full bg-white/20 blur-sm"
			>
			</div>
			<div
				class="absolute right-2 bottom-2 h-3 w-3 animate-pulse rounded-full bg-white/30 blur-sm"
				style="animation-delay: 1s;"
			>
			</div>
		</div>

		{/* Content section */}
		<div class="space-y-4 p-6">
			{/* Title */}
			<div class="space-y-2">
				<h3
					class="group-hover:{design.gradient} text-xl leading-tight font-bold text-gray-900 transition-all duration-300 group-hover:bg-gradient-to-r group-hover:bg-clip-text group-hover:text-transparent dark:text-white"
				>
					{title}
				</h3>

				{/* Progress indicator */}
				<div class="flex items-center space-x-1">
					{
						Array.from({ length: 6 }, (_, i) => (
							<div
								class={`h-1 flex-1 rounded-full transition-all duration-700 ${
									i <= index
										? `bg-gradient-to-r ${design.gradient} shadow-sm`
										: 'bg-gray-200 dark:bg-gray-700'
								}`}
								style={`transition-delay: ${i * 50}ms`}
							/>
						))
					}
				</div>
			</div>

			{/* Description */}
			<p
				class="line-clamp-3 text-sm leading-relaxed text-gray-600 transition-colors duration-300 group-hover:text-gray-800 dark:text-gray-300 dark:group-hover:text-gray-200"
			>
				{description}
			</p>

			{/* Bottom accent */}
			<div class="flex items-center justify-between pt-2">
				<div class="flex items-center space-x-2">
					<div
						class="{design.accent} h-2 w-2 animate-pulse rounded-full"
					>
					</div>
					<span
						class="text-xs font-medium tracking-wider text-gray-500 uppercase dark:text-gray-400"
					>
						√âtape {number}
					</span>
				</div>

				{/* Hover arrow */}
				<div
					class="translate-x-2 transform opacity-0 transition-all duration-300 group-hover:translate-x-0 group-hover:opacity-100"
				>
					<svg
						class="h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300"
						fill="none"
						stroke="currentColor"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M9 5l7 7-7 7"></path>
					</svg>
				</div>
			</div>
		</div>

		{/* Subtle inner glow */}
		<div
			class="{design.ring} pointer-events-none absolute inset-0 rounded-2xl opacity-0 ring-1 transition-opacity duration-500 group-hover:opacity-100"
		>
		</div>
	</div>
</div>

<style>
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}

	/* Custom animations */
	@keyframes float {
		0%,
		100% {
			transform: translateY(0px);
		}
		50% {
			transform: translateY(-10px);
		}
	}

	.group:hover .float {
		animation: float 3s ease-in-out infinite;
	}

	/* Enhanced hover effects */
	.group:hover {
		transform: translateY(-4px) scale(1.02);
	}

	/* Smooth transitions */
	* {
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	}
</style>
