---
import { cn } from '@/lib/utils'
import Navigation from './header/navigation.astro'
import Controls from './header/controls.astro'
import Logo from './header/logo.astro'
import MobileButton from './header/mobile-button.astro'
import MobileMenu from './header/mobile-menu.astro'
import { navigationLinks } from '@/lib/constants'
---

<header class="fixed top-0 left-0 right-0 z-50 bg-transparent transition-all duration-300" id="header">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-12 transition-all duration-300">
      <Logo />

      <div class="hidden md:flex items-center space-x-6">
        <Controls />
        <Navigation links={navigationLinks} />
      </div>

      <MobileButton action="open" />
    </div>
  </div>

  <!-- Mobile Menu -->
  <MobileMenu links={navigationLinks} />
</header>

<script>
  // Mobile menu toggle functionality
  const mobileMenuOpenButton = document.getElementById('mobile-menu-open-button');
  const mobileMenuCloseButton = document.getElementById('mobile-menu-close-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuPanel = document.getElementById('mobile-menu-panel');
  
  function openMobileMenu() {
    if (mobileMenu && mobileMenuPanel) {
      mobileMenu.classList.remove('opacity-0', 'invisible');
      mobileMenu.classList.add('opacity-100', 'visible');
      // DÃ©lai pour permettre au fond de s'afficher avant de faire glisser le panneau
      setTimeout(() => {
        mobileMenuPanel.classList.remove('-translate-x-full');
        mobileMenuPanel.classList.add('translate-x-0');
      }, 50);
      // Prevent body scrolling when menu is open
      document.body.style.overflow = 'hidden';
    }
  }
  
  function closeMobileMenu() {
    if (mobileMenu && mobileMenuPanel) {
      mobileMenuPanel.classList.add('-translate-x-full');
      mobileMenuPanel.classList.remove('translate-x-0');
      // Attendre la fin de l'animation de slide avant de cacher le fond
      setTimeout(() => {
        mobileMenu.classList.add('opacity-0', 'invisible');
        mobileMenu.classList.remove('opacity-100', 'visible');
      }, 300);
      // Restore body scrolling when menu is closed
      document.body.style.overflow = '';
    }
  }
  
  // Open button event listener
  if (mobileMenuOpenButton) {
    mobileMenuOpenButton.addEventListener('click', openMobileMenu);
  }
  
  // Close button event listener
  if (mobileMenuCloseButton) {
    mobileMenuCloseButton.addEventListener('click', closeMobileMenu);
  }
  
  // Close menu when clicking on overlay
  if (mobileMenu) {
    mobileMenu.addEventListener('click', (e) => {
      // Only close if clicking on the overlay itself, not on menu content
      if (e.target === mobileMenu) {
        closeMobileMenu();
      }
    });
  }
  
  // Close menu with Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && mobileMenu && mobileMenu.classList.contains('opacity-100')) {
      closeMobileMenu();
    }
  });
</script> 