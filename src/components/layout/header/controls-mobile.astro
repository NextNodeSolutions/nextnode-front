---
import { languages } from '@/lib/constants'
import { Sun, Moon } from 'lucide-react'
import { t } from '@/lib/astro-i18n'
---

<div class="border-t border-gray-200 pt-4 dark:border-gray-700">
	<div class="flex items-center justify-between">
		<!-- Mobile Language Selector -->
		<div class="flex space-x-3">
			{
				languages.map(lang => (
					<button
						data-lang={lang.code}
						class="flex flex-col items-center space-y-1 rounded-lg border border-gray-200 bg-white px-4 py-3 text-gray-600 transition-all duration-300 hover:border-blue-300 hover:bg-blue-50 hover:text-blue-600 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100 dark:hover:border-blue-500 dark:hover:bg-blue-900/20 dark:hover:text-blue-400"
						id={`lang-button-${lang.code}-mobile`}
					>
						<span class="text-xl">{lang.flag}</span>
						<span class="text-xs font-medium">{lang.label}</span>
					</button>
				))
			}
		</div>

		<!-- Mobile Theme Toggle -->
		<button
			id="theme-toggle-mobile"
			class="rounded-full p-2 text-gray-600 transition-all duration-300 hover:scale-110 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-800 dark:hover:text-white"
			aria-label={t('ui.toggleTheme')}
		>
			<Sun id="sun-icon-mobile" className="h-5 w-5" />
			<Moon id="moon-icon-mobile" className="hidden h-5 w-5" />
		</button>
	</div>
</div>

<!-- Initialize icons with correct state -->
<script is:inline>
	// Immediately set correct icon state
	;(function () {
		const savedTheme = localStorage.getItem('theme')
		const systemPrefersDark = window.matchMedia(
			'(prefers-color-scheme: dark)',
		).matches
		const isDark =
			savedTheme === 'dark' || (!savedTheme && systemPrefersDark)

		const sunIcon = document.getElementById('sun-icon-mobile')
		const moonIcon = document.getElementById('moon-icon-mobile')

		if (sunIcon && moonIcon) {
			if (isDark) {
				sunIcon.classList.add('hidden')
				moonIcon.classList.remove('hidden')
			} else {
				sunIcon.classList.remove('hidden')
				moonIcon.classList.add('hidden')
			}
		}
	})()
</script>

<!-- Initialize language selector with correct state -->
<script is:inline>
	// Immediately set correct language state
	;(function () {
		const savedLang = localStorage.getItem('language')
		const browserLang = navigator.language.split('-')[0]
		const supportedLangs = ['en', 'fr']

		let currentLang = 'en'
		if (savedLang && supportedLangs.includes(savedLang)) {
			currentLang = savedLang
		} else if (supportedLangs.includes(browserLang)) {
			currentLang = browserLang
		}

		// Mobile version - update button states
		const enButton = document.getElementById('lang-button-en-mobile')
		const frButton = document.getElementById('lang-button-fr-mobile')

		if (enButton && frButton) {
			// Reset all buttons to inactive state
			enButton.classList.remove(
				'border-blue-300',
				'bg-blue-50',
				'text-blue-600',
				'dark:border-blue-500',
				'dark:bg-blue-900/20',
				'dark:text-blue-400',
			)
			frButton.classList.remove(
				'border-blue-300',
				'bg-blue-50',
				'text-blue-600',
				'dark:border-blue-500',
				'dark:bg-blue-900/20',
				'dark:text-blue-400',
			)

			enButton.classList.add(
				'border-gray-200',
				'bg-white',
				'text-gray-600',
				'dark:border-gray-600',
				'dark:bg-gray-800',
				'dark:text-gray-100',
			)
			frButton.classList.add(
				'border-gray-200',
				'bg-white',
				'text-gray-600',
				'dark:border-gray-600',
				'dark:bg-gray-800',
				'dark:text-gray-100',
			)

			// Activate current language button
			if (currentLang === 'fr') {
				frButton.classList.remove(
					'border-gray-200',
					'bg-white',
					'text-gray-600',
					'dark:border-gray-600',
					'dark:bg-gray-800',
					'dark:text-gray-100',
				)
				frButton.classList.add(
					'border-blue-300',
					'bg-blue-50',
					'text-blue-600',
					'dark:border-blue-500',
					'dark:bg-blue-900/20',
					'dark:text-blue-400',
				)
			} else {
				enButton.classList.remove(
					'border-gray-200',
					'bg-white',
					'text-gray-600',
					'dark:border-gray-600',
					'dark:bg-gray-800',
					'dark:text-gray-100',
				)
				enButton.classList.add(
					'border-blue-300',
					'bg-blue-50',
					'text-blue-600',
					'dark:border-blue-500',
					'dark:bg-blue-900/20',
					'dark:text-blue-400',
				)
			}
		}
	})()
</script>
