---
import { languages } from '@/i18n/config'
import { Sun, Moon } from 'lucide-react'
import { cn } from '@/lib/core/utils'

// Use new i18n and theme system from middleware
const { locale: currentLocale, t, theme } = Astro.locals
---

<div class="border-t border-gray-200 pt-4 dark:border-gray-700">
	<div class="flex items-center justify-between">
		<!-- Mobile Language Selector -->
		<div class="flex space-x-3">
			{
				languages.map(lang => {
					const isActive = lang.code === currentLocale
					const baseClasses =
						'flex flex-col items-center space-y-1 rounded-lg border px-4 py-3 transition-all duration-300'
					const activeClasses = isActive
						? 'border-blue-300 bg-blue-50 text-blue-600 dark:border-blue-500 dark:bg-blue-900/20 dark:text-blue-400'
						: 'border-gray-200 bg-white text-gray-600 hover:border-blue-300 hover:bg-blue-50 hover:text-blue-600 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100 dark:hover:border-blue-500 dark:hover:bg-blue-900/20 dark:hover:text-blue-400'

					return (
						<button
							data-lang={lang.code}
							class={cn(baseClasses, activeClasses)}
							id={`lang-button-${lang.code}-mobile`}
						>
							<span class="text-xl">{lang.flag}</span>
							<span class="text-xs font-medium">{lang.name}</span>
						</button>
					)
				})
			}
		</div>

		<!-- Mobile Theme Toggle -->
		<button
			id="theme-toggle-mobile"
			class="btn-icon"
			aria-label={t('common.ui.toggleTheme')}
		>
			<Sun
				id="sun-icon-mobile"
				className={theme === 'dark' ? 'hidden h-5 w-5' : 'h-5 w-5'}
			/>
			<Moon
				id="moon-icon-mobile"
				className={theme === 'dark' ? 'h-5 w-5' : 'hidden h-5 w-5'}
			/>
		</button>
	</div>
</div>

<!-- No inline script needed - icons are rendered with correct state from SSR -->
