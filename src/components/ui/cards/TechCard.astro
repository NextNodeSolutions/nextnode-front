---
/**
 * TechCard - Reusable technology card component
 * Extracted from tech-stack-grid.astro for consistent tech display
 */

import { t } from '@/lib/i18n/i18n-server'
import type { Technology, TechCategory } from '@/data/tech-stack'
import { getTechColorClasses } from '@/data/tech-stack'

interface Props {
	/** Technology data to display */
	technology: Technology
	/** Category data for color theming */
	category: TechCategory
	/** Animation delay index for staggered animations */
	animationIndex?: number
	/** Additional CSS classes */
	className?: string
}

const { technology, category, animationIndex = 0, className = '' } = Astro.props
const colors = getTechColorClasses(category.color)
---

<div
	class={`tech-card group relative overflow-hidden rounded-2xl border ${colors.border} bg-white p-6 shadow-lg transition-all duration-300 hover:-translate-y-2 hover:shadow-2xl dark:bg-gray-800 ${className}`}
	style={`animation-delay: ${animationIndex * 100}ms`}
>
	<!-- Background pattern -->
	<div class="absolute top-0 right-0 h-32 w-32 opacity-5">
		<svg viewBox="0 0 100 100" class="h-full w-full">
			<defs>
				<pattern
					id={`tech-pattern-${category.id}-${animationIndex}`}
					x="0"
					y="0"
					width="10"
					height="10"
					patternUnits="userSpaceOnUse"
				>
					<circle cx="5" cy="5" r="1" fill="currentColor"></circle>
				</pattern>
			</defs>
			<rect
				width="100"
				height="100"
				fill={`url(#tech-pattern-${category.id}-${animationIndex})`}
			></rect>
		</svg>
	</div>

	<!-- Tech card content -->
	<div class="relative z-10">
		<div class="mb-4 flex items-start justify-between">
			<div class="flex items-center gap-3">
				<div
					class={`h-12 w-12 rounded-xl ${colors.bgLight} flex items-center justify-center text-2xl transition-transform duration-300 group-hover:scale-110`}
				>
					{technology.icon}
				</div>
				<div>
					<h4
						class="text-lg font-semibold text-gray-900 dark:text-white"
					>
						{technology.name}
					</h4>
					<div class={`text-sm ${colors.text} font-medium`}>
						{technology.level}% {t('howWeWork.techStats.mastery')}
					</div>
				</div>
			</div>
		</div>

		<p
			class="mb-4 text-sm leading-relaxed text-gray-600 dark:text-gray-300"
		>
			{t(technology.descriptionKey)}
		</p>

		<!-- Skill level bar -->
		<div class="relative">
			<div class="mb-2 flex items-center justify-between">
				<span
					class="text-xs font-medium text-gray-500 dark:text-gray-400"
				>
					{t('howWeWork.techStats.expertiseLevel')}
				</span>
				<span class={`text-xs font-bold ${colors.text}`}>
					{technology.level}%
				</span>
			</div>
			<div class="h-2 w-full rounded-full bg-gray-200 dark:bg-gray-700">
				<div
					class={`h-2 rounded-full bg-gradient-to-r ${colors.bg} tech-progress transition-all duration-1000 ease-out`}
					data-progress={technology.level}
					style="width: 0%"
				>
				</div>
			</div>
		</div>

		<!-- Hover indicator -->
		<div
			class={`absolute right-0 bottom-0 left-0 h-1 bg-gradient-to-r ${colors.bg} origin-left scale-x-0 transform transition-transform duration-300 group-hover:scale-x-100`}
		>
		</div>
	</div>
</div>

<style>
	/* Entry animation for tech cards */
	.tech-card {
		opacity: 0;
		transform: translateY(20px);
		animation: slideInUp 0.6s ease-out forwards;
	}

	@keyframes slideInUp {
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	/* Progress bar animations */
	.tech-progress {
		transition: width 1.5s ease-out;
	}

	/* Responsive adjustments */
	@media (max-width: 768px) {
		.tech-card {
			padding: 1rem;
		}
	}

	/* Dark mode adjustments */
	@media (prefers-color-scheme: dark) {
		.tech-card {
			border-color: rgba(75, 85, 99, 0.3);
			background: rgba(31, 41, 55, 0.8);
			backdrop-filter: blur(10px);
		}
	}
</style>
