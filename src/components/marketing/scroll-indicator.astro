---
import { cn } from '@/lib/utils'
import { t } from '@/lib/i18n-server'
---

<!-- Scroll Indicator - Mobile Only -->
<div
	class={cn(
		'fixed bottom-8 left-1/2 transform -translate-x-1/2 z-20 transition-opacity duration-300',
		'md:hidden',
	)}
	id="scroll-indicator"
	style="opacity: 0;"
>
	<div class="flex flex-col items-center space-y-2">
		<div class="text-xs font-medium tracking-wide text-gray-500">
			{t('ui.scrollToDiscover')}
		</div>
		<div
			class="flex h-6 w-6 animate-bounce items-center justify-center rounded-full border-2 border-gray-400"
		>
			<svg
				class="h-3 w-3 text-gray-500"
				fill="none"
				stroke="currentColor"
				viewBox="0 0 24 24"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
			</svg>
		</div>
	</div>
</div>

<script>
	// Scroll indicator functionality
	document.addEventListener('DOMContentLoaded', function () {
		const scrollIndicator = document.getElementById('scroll-indicator')

		if (!scrollIndicator) return

		const updateScrollIndicator = () => {
			const currentScrollY = window.scrollY

			if (currentScrollY > 100) {
				// Hide when scrolling
				scrollIndicator.style.opacity = '0'
				scrollIndicator.style.pointerEvents = 'none'
			} else {
				// Show when at top
				scrollIndicator.style.opacity = '1'
				scrollIndicator.style.pointerEvents = 'auto'
			}
		}

		// Listen for scroll events
		window.addEventListener('scroll', updateScrollIndicator, {
			passive: true,
		})

		// Show indicator with fade-in animation after delay
		setTimeout(() => {
			scrollIndicator.style.opacity = '1'
			scrollIndicator.style.pointerEvents = 'auto'
		}, 2000)

		// Initial call after animation delay
		setTimeout(() => {
			updateScrollIndicator()
		}, 2500)
	})
</script>
